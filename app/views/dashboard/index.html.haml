- @page_title = "ダッシュボード"

.inner
  .figure
    .box
      %h3.access_count 24時間
      %p.value
        = access_count("day")
        %span.pv PV
    .box
      %h3.access_count 1週間
      %p.value
        = access_count("week")
        %span.pv PV
    .box
      %h3.access_count 1ヶ月間
      %p.value
        = access_count("month")
        %span.pv PV
    .box
      %h3.access_count 全体
      %p.value
        = access_count("")
        %span.pv PV
.inner.divide
  .access_analyses
    %h2.access_analyses_heading
      直近30日間のアクセス数
    .graph
      %canvas.chartjs#chartjs
  .access_source
    %h2.access_source_heading 上位のアクセス元
    - if @access_analyses
      - @access_analyses.each do |access_analysis|
        .access_source_box
          = link_to access_analysis.source, access_analysis.source, class: "access_source_path"
          %span.percent= "(#{(access_analysis.count * 100.0 / @sum_access).round(1)}%)"
    - else
      .access_not_found
        アクセスデータがありません
.inner
  .access_article
    %h2.access_article_heading
      アクセスが多い記事
    - if @trend_articles.length > 0
      - @trend_articles.each do |article|
        = link_to public_path(article), class: "access_article_link" do
          .flex_item
            %h3.title= article.title
            %span.pv= "アクセス数：#{article.count}pv"
          %span.created_at= article.created_at.strftime("%Y-%m-%d")
    - else
      .access_not_found
        アクセスデータがありません

  :javascript

    const drawing_chart = (data) => {
      let date = []
      let access_counts = []

      for (key in data) {
        date.push(key)
        access_counts.push(data[key])
      }

      let chart_canvas = document.getElementById('chartjs').getContext('2d')

      Chart.defaults.global.defaultFontColor = 'rgba(0, 0, 0, 0.54)'
      Chart.defaults.global.defaultFontSize = 12
      let chart = new Chart(chart_canvas, {
        type: "line",
        data: {
          labels: date,
          datasets: [{
            label: "アクセス数",
            data: access_counts,
            backgroundColor: [
              'rgba(84, 191, 118, 0.3)'
            ],
            borderColor: [
              'rgb(84, 191, 118)'
            ],
            borderWidth: 1,
            lineTension: 0,
          }]
        },
        options: {
          maintainAspectRatio: false,
          scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
          },
        }
      })
    }

    drawing_chart(gon.last_month)
